
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@section head{
    @Styles.Render("~/bundles/ztreecss")
}






<ul id="treeDemo" class="nav ztree"></ul>














@section Scripts {
@Scripts.Render("~/bundles/ztreejs")
<script type="text/javascript">










    var setting = {
        view: {
            selectedMulti: false,
            addHoverDom: addHoverDom,
            removeHoverDom: removeHoverDom //离开节点时的操作
        },
        edit: {
            //enable: true,
            //editNameSelectAll:true,
            //showRemoveBtn: showRemoveBtn,
            //showRenameBtn: showRenameBtn  
        },
        data: {
            keep: {
                parent: true,
                leaf: true
            },
            simpleData: {
                enable: true
            }
        },
        callback: {
            //beforeRemove: beforeRemove,
            //onRemove: onRemove,
            //beforeClick: beforeClick,
            //onClick: onClick,
        }
    };

    function addHoverDom(treeId, treeNode) {
        var sObj = $("#" + treeNode.tId + "_span"); //获取节点信息  
        if (treeNode.editNameFlag || $("#addBtn_" + treeNode.tId).length > 0) return;

        var addStr = "<span class='button add' id='addBtn_" + treeNode.tId + "' title='add node' onfocus='this.blur();'></span>"; //定义添加按钮  
        sObj.after(addStr); //加载添加按钮  
        var btn = $("#addBtn_" + treeNode.tId);

        //绑定添加事件，并定义添加操作  
        if (btn) btn.bind("click", function () {
            var zTree = $.fn.zTree.getZTreeObj("treeDemo_1_a");
            //将新节点添加到数据库中  
            var name = 'NewNode';
            $.post('/home/addtree?pid=' + treeNode.id + '&name=' + name, function (data) {
                
                var newID = data; //获取新添加的节点Id
                var newNodes = [{ name: "newNode1" }, { name: "newNode2" }, { name: "newNode3" }];
                zTree.addNodes(treeNode, newNodes); //页面上添加节点  
                var node = zTree.getNodeByParam("id", newID, null); //根据新的id找到新添加的节点  
                zTree.selectNode(node); //让新添加的节点处于选中状态  
            });
        });
    };
    function removeHoverDom(treeId, treeNode) {
        $("#addBtn_" + treeNode.tId).unbind().remove();
    };

    //function remove(treeId, treeNode)
    //{
        
    //}
    //function beforeRemove(treeId, treeNode)
    //{
        
    //}
    //function onRemove(treeId,treeNode)
    //{

    //}
    //function beforeClick(treeId, treeNode)
    //{

    //}
    //function onClick(treeId, treeNode)
    //{
        
    //}

    function setzNodes(data) {
        var zNodes = [];
        var result = data;
        $.each(data, function (i, item) {
            var picourl = item.IconUrl == "" ? "/Content/ztree/css/zTreeStyle/img/diy/1_open.png" : item.IconUrl;
            var cicourl = item.IconUrl == "" ? "/Content/ztree/css/zTreeStyle/img/diy/3.png" : item.IconUrl;
            if (item.ParentId == 0) {
                zNodes.push({ id: item.Id, pId: 0, name: item.Name, open: true, icon: picourl });
            } else {
                zNodes.push({ id: item.Id, pId: item.ParentId, name: item.Name, icon: cicourl });
            }
        });
        $.fn.zTree.init($("#treeDemo"), setting, zNodes);
    }

    function reloadtree() {
        doAjaxRequest({ url: "@Url.Action("GetCategories", "Home")", callback: setzNodes });
    }







    function doAjaxRequest(opt) {
        var optdata = null;
        if (opt.data != null) {
            optdata = opt.data;
        }
        $.ajax({
            url: opt.url,
            type: "POST",
            data: optdata,
            dataType: "json",
            cache: false,
            success: opt.callback,
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("系统出现异常，请联系管理员！");
            }
        });
    }



    $(function ()
    {
        doAjaxRequest({ url: "@Url.Action("GetCategories", "Home")", callback: setzNodes });
    })


</script>
    }


